@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.Product>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@using Umbraco.Extensions



@{
    Layout = "_Layout.cshtml";
}

@{
    var imageUrl = Model.Value<IPublishedContent>("productImage");
    var substituteImage = "https://images.pexels.com/photos/11350818/pexels-photo-11350818.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1";
}


<div class="navbar-compensator">
</div>

<h1 class="w-100 text-center">@Model.Value("productName")</h1>

<div class="d-flex justify-content-center align-items-center">
    <div class="m-5 p-5">
        <div style="height: 400px;">

            <div class="product-box">

                <div class="product-square">
                    @if (imageUrl != null)
                    {
                        <img class="w-100 h-100" src="@imageUrl.Url()" alt="image" />
                    }
                    else
                    {
                        <img class="w-100 h-100" src="@substituteImage" alt="image" />
                    }
                    <div class="quick-view-icons">
                        <div class="icon-circle">
                            <a href="https://www.dn.se/"><i class="fa-solid fa-heart"></i></a>
                        </div>
                        <div class="icon-circle">
                            <a href=""><i class="fa-solid fa-arrows-spin"></i></a>
                        </div>
                        <div class="icon-circle">
                            <a href=""><i class="fa-solid fa-bag-shopping"></i></a>
                        </div>
                    </div>
                    <div class="red-box">
                        <div class="left-corner"></div>
                        <p>@Model.Value("productRedBox")</p>
                        <div class="right-corner"></div>
                    </div>
                </div>


                <div class="product-text">
                    <p>@Model.Value("productCategory")</p>
                    <p><strong>@Model.Value("productName")</strong></p>
                    <div>

                        @{
                            var rating = (int)Model.Value("productRating");

                            if (rating is < 6 and > 0)
                            {
                                for (var i = 0; i < rating; i++)
                                {
                                    <i class="fa-solid fa-star"></i>
                                }
                            }
                        }

                    </div>
                    <p><strong>@Model.Value("productPrice")</strong></p>
                </div>
            </div>
        </div>
    </div>
    <div class="m-5 p-5">
        <h3 class="mb-2">@Model.Value("productDescriptionHeader")</h3>
        <p>@Model.Value("productDescription")</p>
    </div>
</div>


